[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[project]
name = "ossfs"
description = "fsspec filesystem for OSS"
readme = "README.rst"
authors = [{ name = "Yanxiang Gao", email = "gao@iterative.ai" }]
maintainers = [{ name = "Yanxiang Gao", email = "gao@iterative.ai" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.8"
dependencies = ["aiooss2>=0.2.11", "fsspec>=2023.9.2", "oss2==2.19.1"]
license = { text = "Apache-2.0" }
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/fsspec/ossfs"

[project.optional-dependencies]
tests = [
    "aliyun-python-sdk-sts==3.1.2",
    "pytest-cov>=3,<6",
    "pytest-mock>=3.8.2,<4",
    "pytest>=7.2.0,<8",
    "requests>=2.31.0",
]
dev = ["ossfs[tests]", "mypy==1.14.1"]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools_scm]

[tool.pytest.ini_options]
addopts = "-ra"

[tool.coverage.run]
branch = true
source = ["ossfs", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "raise AssertionError",
    "@overload",
]

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = true
warn_unused_configs = true
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
files = ["src", "tests"]

[[tool.mypy.overrides]]
module = ["oss2.*", "fsspec.*", "aliyunsdkcore", "aliyunsdksts.*", "requests"]
ignore_missing_imports = true

[tool.codespell]
ignore-words-list = " "

[tool.ruff.lint]
select = [
    "F", "E", "W", "C90", "I", "N", "UP", "YTT", "ASYNC", "S", "BLE", "B", "A", "C4", "DTZ", "T10",
    "EXE", "ISC", "ICN", "LOG", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET",
    "SLOT", "SIM", "TID", "TC", "ARG", "PGH", "PLC", "PLE", "PLR", "PLW", "TRY",
    "FLY", "PERF", "FURB", "RUF",
]
ignore = ["D", "FA", "S101", "ANN", "FBT", "PLR2004", "TRY003", "PT011", "SIM117", "TRY300"]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.per-file-ignores]
"docs/**" = ["INP001"]
"tests/**" = ["S", "TRY", "ARG"]
